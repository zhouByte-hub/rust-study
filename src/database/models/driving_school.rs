//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;
use crate::database::models::city;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "driving_school")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub shop_logo: Option<String>,
    pub shop_name: String,
    pub city_name: String,
    pub district_name: Option<String>,
    pub basic_biz: Option<Json>,
    pub phone_number: Option<String>,
    pub goods_list: Option<Json>,
    pub advantage: Option<String>,
    pub qualification: Option<Json>,
    #[sea_orm(column_type = "Double", nullable)]
    pub longitude: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub latitude: Option<f64>,
    pub city_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {

    #[sea_orm(belongs_to = "city::Entity", from="Column::CityId", to="city::Column::Id")]
    City
}

impl Related<city::Entity> for Entity {
    
    fn to() -> RelationDef {
        Relation::City.def()
    }
}



impl ActiveModelBehavior for ActiveModel {}
