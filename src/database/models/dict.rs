//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;
use crate::database::models::dict_group;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "dict")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = true)]
    pub id: i32,
    #[sea_orm(unique)]
    // #[serde(skip_deserializing)] // Skip deserializing
    pub dict_name: String,
    #[sea_orm(unique)]
    pub dict_code: String,
    pub remark: Option<String>,
    pub group_code: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {

    // 字典与字段组的关系，字段的 group_code 字段对应的是字段组的 group_code 字段，这样才能方便底层进行查询
    #[sea_orm(belongs_to="dict_group::Entity", from = "Column::GroupCode", to = "dict_group::Column::GroupCode")]
    DictGroup,
}

impl Related<dict_group::Entity> for Entity {

    fn to() -> RelationDef {
        Relation::DictGroup.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
