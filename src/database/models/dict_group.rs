//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use crate::database::models::dict;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "dict_group")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub group_name: String,
    #[sea_orm(unique)]
    pub group_code: String,
}

/**
 * 字典组和字典的关系，一个字段组存在多个字典
 * 如果 A has_many B，那么 B 必须 belongs_to A。
 */
#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "dict::Entity")]
    Dict,
}

impl Related<dict::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Dict.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
