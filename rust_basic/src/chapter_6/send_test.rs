/**
 * Send和Sync是 Rust 安全并发的重中之重，但是实际上它们只是标记特征(marker trait，该特征未定义任何行为，因此非常适合用于标记), 来看看它们的作用：
 *      1、实现Send的类型可以在线程间安全的传递其所有权
 *      2、实现Sync的类型可以在线程间安全的共享内存(通过引用)
 * 一个类型要在线程间安全的共享的前提是，指向它的引用必须能在线程间传递。因为如果引用都不能被传递，我们就无法在多个线程间使用引用去访问同一个数据了。
 *
 * 在 Rust 中，几乎所有类型都默认实现了Send和Sync，而且由于这两个特征都是可自动派生的特征(通过derive派生)，意味着一个复合类型(例如结构体),
 * 只要它内部的所有成员都实现了Send或者Sync，那么它就自动实现了Send或Sync。
 */

fn test() {}
