/**
 * 浮点类型数字 是带有小数点的数字，在 Rust 中浮点类型数字也有两种基本类型： f32 和 f64，分别为 32 位和 64 位大小。默认浮点类型是 f64，在现代的 CPU 中它的速度与 f32 几乎相同，但精度更高。
 * 浮点数的陷阱：
 *      1、浮点数往往是你想要数字的近似表达
 *      2、浮点数在某些特性上是反直觉的，也就是说浮点数的比较会存在错误
 */

pub fn float_type() {
    // 浮点数，值要么是浮点数要么就加上标识符 f32 或者 f64
    let a: f32 = 12_f32;
    let b: f64 = 24.0;

    println!("{} {}", a, b)
}

// 浮点数所有跟 NaN 交互的操作，都会返回一个 NaN，而且 NaN 不能用来比较, 会导致程序 Panic
// 出于防御性编程的考虑，可以使用 is_nan() 等方法，可以用来判断一个数值是否是 NaN
pub fn test_nan() {
    let a = 12_f32;
    println!("{}", a.is_nan());
}
